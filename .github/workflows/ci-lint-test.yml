name: CI - Lint & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint # Run after lint succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test -- --coverage

      # Optional: Upload coverage report (example using codecov)
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v4
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} # Store token in GitHub secrets


  status-comment:
    name: Post Status Comment
    runs-on: ubuntu-latest
    needs: [lint, test] # Run after both lint and test succeed
    # Only run on pull requests and if previous jobs succeeded
    if: github.event_name == 'pull_request' && success()
    permissions:
      pull-requests: write # Required to comment on PRs
    steps:
      - name: Post success comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Linting and Unit Tests passed successfully!'
            }) 